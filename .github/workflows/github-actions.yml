name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Change this to your main branch name

jobs:
  build:
    runs-on: self-hosted
    container: debian:trixie-slim
    services:
      mysql:
        # https://hub.docker.com/_/mysql
        image: mysql:8.0
        env:
          MYSQL_DATABASE: dbname
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: ANSKk08aPEDbFjDO
          MYSQL_DATABASE_HOST: db
          MYSQL_DATABASE_PORT: 3306
        ports:
          - 33306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - name: Add hosts to /etc/hosts
        run: |
            echo "127.0.0.1       db" | tee -a /etc/hosts
      - name: Install mysql server
        run: sudo apt install mysql-server
      - name: Configure mysql database
        run: sudo mysql -h 127.0.0.1 -uroot -pANSKk08aPEDbFjDO database < db_structure.sql
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Migrate database
        run: |
          python3 primaProject/manage.py makemigrations
          python3 primaProject/manage.py migrate
      - name: Test code
        run: python3 primaProject/manage.py test

  minikube:
    runs-on: self-hosted
    needs: build
    name: Install minikube
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        uses: medyagh/setup-minikube@latest
        
  dockerize:
    runs-on: self-hosted
    needs: minikube
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          docker build . -t imageName
          echo -n "verifying images:"
          docker images

    
  deployment:
    runs-on: self-hosted
    needs: dockerize
    steps:
      - name: Start Minikube
        run: minikube start
      - name: Load Docker image into Minikube
        run: eval $(minikube -p minikube docker-env) && docker load -i my-django-app_latest.tar
      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f k8s/env-configmap.yaml
          kubectl apply -f k8s/db-claim0-persistentvolumeclaim.yaml
          kubectl apply -f k8s/djangonetwork-networkpolicy.yaml
          kubectl apply -f k8s/db-deployment.yaml
          kubectl apply -f k8s/db-service.yaml
          kubectl apply -f k8s/web-deployment.yaml
          kubectl apply -f k8s/web-service.yaml
      - name: Wait for deployment to be ready
        run: kubectl rollout status deployment/web -n default --timeout=300s
      - name: Get api url
        run: minikube service web --url
      - name: Verify Deployment
        run: kubectl get deployments && kubectl get services
      
