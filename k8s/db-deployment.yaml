apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      io.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.network/djangonetwork: "true"
        io.service: db
    spec:
      containers:
        - args:
            - mysqld
            - --character-set-server=utf8mb4
            - --collation-server=utf8mb4_unicode_ci
          image: mysql:8.0
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: env-secret
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: env-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: env-secret
                  key: MYSQL_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: MYSQL_DATABASE
            - name: MYSQL_DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: MYSQL_DATABASE_PORT
            - name: MYSQL_DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: env-config
                  key: MYSQL_DATABASE_HOST
          name: db
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 15
            periodSeconds: 20
          ports:
            - containerPort: 3306
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: db-claim0
      restartPolicy: Always
      volumes:
        - name: db-claim0
          persistentVolumeClaim:
            claimName: db-claim0
status: {}
